{"ast":null,"code":"var _jsxFileName = \"/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/InstagramTags/InstagramTags.js\";\nimport React, { Component } from 'react';\nimport Shuffle from '../../Utils/Shuffle';\nimport ButtonIG from '../InstagramLocations/Button_Ig';\nimport texts from '../../../texts.json';\nimport './InstagramTags.css';\n\nclass Instagram extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      randomImageSrc: \"\",\n      randomImageLocation: \"\",\n      locationOptions: [],\n      data: []\n    };\n    this.attempts = 0;\n    this.counter = 0;\n    this.apiCleanedResult = {};\n    this.apiResultLength = 0;\n\n    this.cleanApiResponse = () => {\n      const images = this.state.data.filter(img => img.node.edge_media_to_tagged_user !== null);\n      const result = images.map(image => ({\n        src: image.node.thumbnail_resources[0].src,\n        tag: image.node.edge_media_to_tagged_user.edges[0].node.user.username\n      }));\n      this.apiCleanedResult = result;\n      this.apiResultLength = result.length;\n    };\n\n    this.profileId = '42596988';\n    this.numberOfPosts = '200000';\n  }\n\n  componentDidMount() {\n    fetch(`https://www.instagram.com/graphql/query/?query_hash=e769aa130647d2354c40ea6a439bfc08&variables={\"id\":\"${this.profileId}\",\"first\":${this.numberOfPosts}}`).then(res => res.json()).then(data => this.setState({\n      data: data.data.user.edge_owner_to_timeline_media.edges\n    })).then(() => this.cleanApiResponse()).then(() => this.setRandomImageAndLocations());\n  }\n\n  render() {\n    const {\n      randomImageSrc,\n      locationOptions\n    } = this.state;\n\n    if (this.attempts < this.apiResultLength) {\n      return React.createElement(\"div\", {\n        className: \"instagram-game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageAndLocationsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, texts[this.props.language].instagramQuestion), React.createElement(\"div\", {\n        className: \"imageDisplayedContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageDisplayed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: randomImageSrc,\n        alt: \"radom capture from the user's instagram feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), locationOptions.map((option, index) => {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"instagram-location-buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(ButtonIG, {\n          value: option,\n          currentLocation: this.state.randomImageLocation,\n          addToCounter: this.addOneToCounter,\n          key: index,\n          setRandomImageAndLocations: this.setRandomImageAndLocations,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }));\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, texts[this.props.language].correctAnswers, \" \", this.counter)));\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Has llegado al final! Ahora prueba de jugar con La Pegatina en Spotify o en Youtube\");\n    }\n  }\n\n}\n\nexport default Instagram;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/InstagramTags/InstagramTags.js"],"names":["React","Component","Shuffle","ButtonIG","texts","Instagram","state","randomImageSrc","randomImageLocation","locationOptions","data","attempts","counter","apiCleanedResult","apiResultLength","cleanApiResponse","images","filter","img","node","edge_media_to_tagged_user","result","map","image","src","thumbnail_resources","tag","edges","user","username","length","profileId","numberOfPosts","componentDidMount","fetch","then","res","json","setState","edge_owner_to_timeline_media","setRandomImageAndLocations","render","props","language","instagramQuestion","option","index","addOneToCounter","correctAnswers"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Shuffle from '../../Utils/Shuffle'\nimport ButtonIG from '../InstagramLocations/Button_Ig';\nimport texts from '../../../texts.json';\n\nimport './InstagramTags.css';\n\nclass Instagram extends Component {\n\n    state = {\n        randomImageSrc: \"\",\n        randomImageLocation: \"\",\n        locationOptions: [],\n        data: [],\n    }\n\n    attempts= 0;\n    counter= 0;\n    apiCleanedResult = {}\n    apiResultLength = 0\n\n\n   //Cleans the object retrieved from the api and leaves an array of objects that just have the image source for the picture and the image location\n    cleanApiResponse = () => {\n        const images = this.state.data.filter(img => img.node.edge_media_to_tagged_user !== null)\n\n        const result = images.map((image) => ({\n            src: image.node.thumbnail_resources[0].src,\n            tag: image.node.edge_media_to_tagged_user.edges[0].node.user.username\n        }))\n\n        this.apiCleanedResult = result;\n        \n        this.apiResultLength = result.length\n    }\n\n    //Takes off the first element of the array resulting in cleanApiResponse (called result) and takes the next 3 elements\n    // setRandomImageAndLocations = () => {\n\n    //     Shuffle(this.apiCleanedResult)\n\n    //     const firstElement = this.apiCleanedResult.shift();\n\n    //     const imagesObjArr = this.apiCleanedResult.slice(0, 3);\n\n    //     const threeLocationsArr = imagesObjArr.map((imageObj) => imageObj.location)\n\n    //     threeLocationsArr.push(firstElement.location) //Cuando hacemos el push, el mismo array, con el mismo nombre, pasa de tener 3 elementos a tener 4. Si igualamos esta array a una constante, no estaríamos guardando la array de 4 elementos resultante sinó que guardaríamos el resultado del push, que sería soplo el número 4, tantos como elementos tiene dentro la array\n\n    //     const threeRandomPlusCorrectLocationArr = Shuffle(threeLocationsArr)\n\n    //     this.setState ({\n    //         randomImageSrc: firstElement.src,\n    //         randomImageLocation: firstElement.location,\n    //         locationOptions: threeRandomPlusCorrectLocationArr,\n    //     })\n\n    //     this.attempts = this.attempts+1\n    // }\n\n    // addOneToCounter = () => {\n    //     this.counter = this.counter+1\n    // }\n\n    profileId = '42596988';\n    //cuore ID\n    numberOfPosts = '200000';\n\n    componentDidMount() {\n        fetch(`https://www.instagram.com/graphql/query/?query_hash=e769aa130647d2354c40ea6a439bfc08&variables={\"id\":\"${this.profileId}\",\"first\":${this.numberOfPosts}}`)\n          .then(res => res.json())\n          .then(data => this.setState({ data: data.data.user.edge_owner_to_timeline_media.edges }))\n          .then(() => this.cleanApiResponse())\n          .then(() => this.setRandomImageAndLocations())\n    }\n\n\n    render () {\n\n        const { randomImageSrc, locationOptions } = this.state;\n\n        if (this.attempts < this.apiResultLength) {\n            return (\n                <div className=\"instagram-game\">\n                    <div className=\"imageAndLocationsContainer\">\n                    <h1>{texts[this.props.language].instagramQuestion}</h1>\n                        <div className=\"imageDisplayedContainer\">\n                            <div className=\"imageDisplayed\">\n                                <img src={randomImageSrc} alt=\"radom capture from the user's instagram feed\" />\n                            </div>\n                        </div>\n                        \n                        {locationOptions.map((option, index) => {\n                            return (\n                                <div key={index} className=\"instagram-location-buttons\">\n                                    <ButtonIG value={option} currentLocation={this.state.randomImageLocation} addToCounter={this.addOneToCounter} key={index} setRandomImageAndLocations={this.setRandomImageAndLocations}\n                                    >\n                                    </ButtonIG>\n                                </div>\n                            )\n                        })}\n                        <p>{texts[this.props.language].correctAnswers} {this.counter}</p>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <h1>Has llegado al final! Ahora prueba de jugar con La Pegatina en Spotify o en Youtube</h1>\n            )\n        }\n    }\n\n}\n\nexport default Instagram;\n\n"]},"metadata":{},"sourceType":"module"}