{"ast":null,"code":"var _jsxFileName = \"/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/ListenedSongs/ListenedSongs.js\";\nimport React, { Component } from 'react'; // import Sound from 'react-sound';\n\nimport texts from '../../texts.json';\nimport './ListenedSongs.css';\n\nclass ListenedSongs extends Component {\n  render() {\n    return this.props.unknownSongs ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"instruct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, texts[this.props.language].listenedSongs), React.createElement(\"ul\", {\n      id: \"mistakes\",\n      className: \"instruct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.unknownSongs.map(song => {\n      const url = song.uri;\n      return React.createElement(\"li\", {\n        key: song.uri,\n        className: \"mistake-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"song-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, song.name), React.createElement(\"a\", {\n        href: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, song.uri), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#exampleModalCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, texts[this.props.language].shareTheSongButton), React.createElement(\"div\", {\n        class: \"modal fade\",\n        id: \"exampleModalCenter\",\n        tabindex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"exampleModalCenterTitle\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-dialog modal-dialog-centered\",\n        role: \"document\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"modal-title\",\n        id: \"exampleModalCenterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, texts[this.props.language].whereToShareText), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        class: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"...\"), React.createElement(\"div\", {\n        class: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-secondary\",\n        \"data-dismiss\": \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Save changes\"))))));\n    }))) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"No songs\");\n  }\n\n}\n\n;\nexport default ListenedSongs;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/ListenedSongs/ListenedSongs.js"],"names":["React","Component","texts","ListenedSongs","render","props","unknownSongs","language","listenedSongs","map","song","url","uri","name","shareTheSongButton","whereToShareText"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import Sound from 'react-sound';\nimport texts from '../../texts.json';\nimport './ListenedSongs.css';\n\n\n\n\nclass ListenedSongs extends Component {\n\n    render () {\n\n        return (\n            this.props.unknownSongs ? \n            <div>\n                <h4 className=\"instruct\">{texts[this.props.language].listenedSongs}</h4>\n                <ul id=\"mistakes\" className=\"instruct\">  \n                    {this.props.unknownSongs.map((song) => {\n                    const url= song.uri\n                    return (\n                        <li key={song.uri} className=\"mistake-list\">\n                            <div className=\"song-name\">\n                            {song.name} \n                            </div>\n                            <a href={url}>{song.uri}</a>\n\n\n                            {/* <-- Button trigger modal --> */}\n                            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">\n                            {texts[this.props.language].shareTheSongButton}\n                            </button>\n\n                            {/* <-- Modal --> */}\n                            <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                <div class=\"modal-content\">\n                                <div class=\"modal-header\">\n                                    <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">{texts[this.props.language].whereToShareText}</h5>\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    ...\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                    <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n                                </div>\n                                </div>\n                            </div>\n                            </div>\n\n\n\n                            {/* <button className=\"repeat-button\" onClick={this.props.onClick ? () => this.props.stopMusic() : () => this.props.getSongUrl(song)}>\n                            {this.props.onClick ? texts[this.props.language].pauseText : texts[this.props.language].listenAgain} \n                            </button>  */}\n                        </li>\n                    )\n                    })}\n                </ul>\n                {/* <Sound \n                    url={this.props.songUrl}\n                    playStatus={this.props.playerState}\n                    autoLoad={this.props.autoLoad}\n                /> */}\n            </div>\n            : <p>No songs</p>\n        )\n    }\n};\n\nexport default ListenedSongs;\n\n\n"]},"metadata":{},"sourceType":"module"}