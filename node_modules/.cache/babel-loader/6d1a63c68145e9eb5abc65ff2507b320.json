{"ast":null,"code":"var _jsxFileName = \"/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/InstagramLocations/InstagramLocations.js\";\nimport React, { Component } from 'react';\nimport Shuffle from '../../Utils/Shuffle';\nimport ButtonIgLocations from './ButtonIgLocations';\nimport texts from '../../../texts.json';\nimport './InstagramLocations.css';\nimport Loading from '../../Utils/Loading/Loading';\n\nclass InstagramLocationsGame extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      randomImageSrc: \"\",\n      randomImageLocation: \"\",\n      locationOptions: [],\n      data: [],\n      gameStatus: \"loading\"\n    };\n    this.attempts = 0;\n    this.counter = 0;\n    this.apiCleanedResult = {};\n    this.apiResultLength = 0;\n\n    this.cleanApiResponse = () => {\n      const images = this.state.data.filter(img => img.node.location !== null);\n      const result = images.map(image => ({\n        src: image.node.thumbnail_resources[4].src,\n        location: image.node.location.name\n      }));\n      this.apiCleanedResult = result;\n      this.apiResultLength = result.length;\n      console.log(\"array a state amb el que torna api call\", images);\n    };\n\n    this.setRandomImageAndLocations = () => {\n      Shuffle(this.apiCleanedResult);\n      const firstElement = this.apiCleanedResult.shift();\n      const imagesObjArr = this.apiCleanedResult.slice(0, 3);\n      const threeLocationsArr = imagesObjArr.map(imageObj => imageObj.location);\n      threeLocationsArr.push(firstElement.location); //Cuando hacemos el push, el mismo array, con el mismo nombre, pasa de tener 3 elementos a tener 4. Si igualamos esta array a una constante, no estaríamos guardando la array de 4 elementos resultante sinó que guardaríamos el resultado del push, que sería soplo el número 4, tantos como elementos tiene dentro la array\n\n      const threeRandomPlusCorrectLocationArr = Shuffle(threeLocationsArr);\n      this.setState({\n        randomImageSrc: firstElement.src,\n        randomImageLocation: firstElement.location,\n        locationOptions: threeRandomPlusCorrectLocationArr,\n        gameStatus: 'playing'\n      });\n      this.attempts = this.attempts + 1;\n    };\n\n    this.addOneToCounter = () => {\n      this.counter = this.counter + 1;\n    };\n\n    this.profileId = '32402644';\n    this.numberOfPosts = '200000';\n  }\n\n  componentDidMount() {\n    fetch(`https://www.instagram.com/graphql/query/?query_hash=e769aa130647d2354c40ea6a439bfc08&variables={\"id\":\"${this.profileId}\",\"first\":${this.numberOfPosts}}`).then(res => res.json()).then(data => this.setState({\n      data: data.data.user.edge_owner_to_timeline_media.edges\n    })).then(() => this.cleanApiResponse()).then(() => this.setRandomImageAndLocations());\n  }\n\n  render() {\n    const {\n      randomImageSrc,\n      locationOptions\n    } = this.state;\n\n    if (this.state.gameStatus === \"loading\") {\n      return React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Loading,\n        alt: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \">\");\n    }\n\n    if (this.state.gameStatus === \"playing\") {\n      return React.createElement(\"div\", {\n        className: \"instagram-game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageAndLocationsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, texts[this.props.language].instagramQuestion), React.createElement(\"div\", {\n        className: \"imageDisplayedContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageDisplayed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: randomImageSrc,\n        alt: \"radom capture from the user's instagram feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"instagram-location-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, locationOptions.map((option, index) => {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"instagram-option-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(ButtonIgLocations, {\n          value: option,\n          currentLocation: this.state.randomImageLocation,\n          addToCounter: this.addOneToCounter,\n          key: index,\n          setRandomImageAndLocations: this.setRandomImageAndLocations,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }));\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, texts[this.props.language].correctAnswers, \" \", this.counter)));\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Has llegado al final! Ahora prueba de jugar con La Pegatina en Spotify o en Youtube\");\n    }\n  }\n\n}\n\nexport default InstagramLocationsGame;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/InstagramLocations/InstagramLocations.js"],"names":["React","Component","Shuffle","ButtonIgLocations","texts","Loading","InstagramLocationsGame","state","randomImageSrc","randomImageLocation","locationOptions","data","gameStatus","attempts","counter","apiCleanedResult","apiResultLength","cleanApiResponse","images","filter","img","node","location","result","map","image","src","thumbnail_resources","name","length","console","log","setRandomImageAndLocations","firstElement","shift","imagesObjArr","slice","threeLocationsArr","imageObj","push","threeRandomPlusCorrectLocationArr","setState","addOneToCounter","profileId","numberOfPosts","componentDidMount","fetch","then","res","json","user","edge_owner_to_timeline_media","edges","render","props","language","instagramQuestion","option","index","correctAnswers"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Shuffle from '../../Utils/Shuffle'\nimport ButtonIgLocations from './ButtonIgLocations';\nimport texts from '../../../texts.json';\n\nimport './InstagramLocations.css';\n\nimport Loading from '../../Utils/Loading/Loading';\n\nclass InstagramLocationsGame extends Component {\n\n    state = {\n        randomImageSrc: \"\",\n        randomImageLocation: \"\",\n        locationOptions: [],\n        data: [],\n        gameStatus: \"loading\"\n    }\n\n    attempts= 0;\n    counter= 0;\n    apiCleanedResult = {}\n    apiResultLength = 0\n\n\n   //Cleans the object retrieved from the api and leaves an array of objects that just have the image source for the picture and the image location\n    cleanApiResponse = () => {\n        const images = this.state.data.filter(img => img.node.location !== null)\n\n        const result = images.map((image) => ({\n            src: image.node.thumbnail_resources[4].src,\n            location: image.node.location.name\n        }))\n\n        this.apiCleanedResult = result;\n\n        this.apiResultLength = result.length\n\n        console.log(\"array a state amb el que torna api call\", images)\n    }\n\n    //Takes off the first element of the array resulting in cleanApiResponse (called result) and takes the next 3 elements\n    setRandomImageAndLocations = () => {\n\n        Shuffle(this.apiCleanedResult)\n\n        const firstElement = this.apiCleanedResult.shift();\n\n        const imagesObjArr = this.apiCleanedResult.slice(0, 3);\n\n        const threeLocationsArr = imagesObjArr.map((imageObj) => imageObj.location)\n\n        threeLocationsArr.push(firstElement.location) //Cuando hacemos el push, el mismo array, con el mismo nombre, pasa de tener 3 elementos a tener 4. Si igualamos esta array a una constante, no estaríamos guardando la array de 4 elementos resultante sinó que guardaríamos el resultado del push, que sería soplo el número 4, tantos como elementos tiene dentro la array\n\n        const threeRandomPlusCorrectLocationArr = Shuffle(threeLocationsArr)\n\n        this.setState ({\n            randomImageSrc: firstElement.src,\n            randomImageLocation: firstElement.location,\n            locationOptions: threeRandomPlusCorrectLocationArr,\n            gameStatus: 'playing'\n        })\n\n        this.attempts = this.attempts+1\n    }\n\n    addOneToCounter = () => {\n        this.counter = this.counter+1\n    }\n\n\n    // 'https://codeofaninja.com/tools/find-instagram-user-id'\n    \n    // profileId= '178522459';\n    // //bestvacations ID\n\n\n    // profileId = '42596988';\n    //cuore ID\n\n    profileId='32402644';\n    //Rut's ID\n\n    \n    // profileId = '10934686';\n    //LaPegatina ID\n    numberOfPosts = '200000';\n\n    componentDidMount() {\n        \n        fetch(`https://www.instagram.com/graphql/query/?query_hash=e769aa130647d2354c40ea6a439bfc08&variables={\"id\":\"${this.profileId}\",\"first\":${this.numberOfPosts}}`)\n          .then(res => res.json())\n          .then(data => this.setState({ data: data.data.user.edge_owner_to_timeline_media.edges }))\n          .then(() => this.cleanApiResponse())\n          .then(() => this.setRandomImageAndLocations())\n    }\n\n\n    render () {\n\n        const { randomImageSrc, locationOptions } = this.state;\n\n        if (this.state.gameStatus === \"loading\") {\n            return (\n                <div className=\"loading\">\n                    <img src={Loading} alt=\"loading\"/>>\n                </div>\n            )\n        }\n\n        if (this.state.gameStatus===\"playing\") {\n            return (\n                <div className=\"instagram-game\">\n                    <div className=\"imageAndLocationsContainer\">\n                    <h1>{texts[this.props.language].instagramQuestion}</h1>\n                        <div className=\"imageDisplayedContainer\">\n                            <div className=\"imageDisplayed\">\n                                <img src={randomImageSrc} alt=\"radom capture from the user's instagram feed\" />\n                            </div>\n                        </div>\n                        <div className=\"instagram-location-buttons\">\n                            {locationOptions.map((option, index) => {\n                                return (\n                                    <div key={index} className=\"instagram-option-button\">\n                                        <ButtonIgLocations value={option} currentLocation={this.state.randomImageLocation} addToCounter={this.addOneToCounter} key={index} setRandomImageAndLocations={this.setRandomImageAndLocations}\n                                        >\n                                        </ButtonIgLocations>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <p>{texts[this.props.language].correctAnswers} {this.counter}</p>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <h1>Has llegado al final! Ahora prueba de jugar con La Pegatina en Spotify o en Youtube</h1>\n            )\n        }\n    }\n\n}\n\nexport default InstagramLocationsGame;\n\n"]},"metadata":{},"sourceType":"module"}