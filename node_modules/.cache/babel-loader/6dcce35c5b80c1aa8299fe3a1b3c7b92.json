{"ast":null,"code":"var _jsxFileName = \"/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Youtube/QuizYT/QuizYT.js\";\n\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport Shuffle from '../../Utils/Shuffle';\nimport { MyContext } from '../../../context/MyProvider';\nimport YTCountdown from '../YTCountdown/YTCountdown';\n\nclass QuizYT extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: this.props.questions,\n      index: 0,\n      // gameStatus: \"playing\",\n      correctAnswer: this.props.questions[0].answers[0],\n      points: 0,\n      display: 'question' // counter: 0\n      // clicked: false\n\n    };\n\n    this.toNext = () => {\n      const {\n        questions,\n        index\n      } = this.state; // if(this.state.index > this.state.counter){\n\n      if (index < 4) {\n        this.setState({\n          index: index + 1,\n          correctAnswer: questions[index + 1].answers[0] // points: points + 1000,\n          // counter: this.state.counter+1\n\n        });\n      } else {\n        this.props.stopPlaying();\n      }\n    };\n\n    this.checkIf = e => {\n      const {\n        correctAnswer,\n        points\n      } = this.state;\n      const displayedAnswer = e.target.value;\n\n      if (displayedAnswer === correctAnswer) {\n        this.setState({\n          points: points + 1000,\n          display: 'timer'\n        });\n        setTimeout(() => {\n          this.toNext();\n        }, 5000);\n      }\n    };\n  }\n\n  render() {\n    const {\n      questions,\n      index,\n      points,\n      display\n    } = this.state;\n    return React.createElement(MyContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, context => React.createElement(\"div\", {\n      className: \"the-yt-quiz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, display === 'timer' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(YTCountdown, {\n      toNext: this.toNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"quiz-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"quiz-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, questions[index].question)), React.createElement(\"div\", {\n      className: \"btn-4-YT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, Shuffle(questions[index].answers).map((item, index) => React.createElement(\"button\", {\n      type: \"button\",\n      value: item,\n      onClick: e => {\n        this.checkIf(e);\n        context.addPoints(points);\n      },\n      key: index,\n      className: \"myButtonYT buttonYT titleColorYT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, item)))));\n  }\n\n}\n\nexport default QuizYT;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Youtube/QuizYT/QuizYT.js"],"names":["React","Component","Shuffle","MyContext","YTCountdown","QuizYT","state","questions","props","index","correctAnswer","answers","points","display","toNext","setState","stopPlaying","checkIf","e","displayedAnswer","target","value","setTimeout","render","context","question","map","item","addPoints"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport Shuffle from '../../Utils/Shuffle';\nimport { MyContext } from '../../../context/MyProvider';\nimport YTCountdown from '../YTCountdown/YTCountdown';\n\nclass QuizYT extends Component {\n\nstate={\n    questions: this.props.questions,\n    index: 0,\n    // gameStatus: \"playing\",\n    correctAnswer: this.props.questions[0].answers[0],\n    points: 0,\n    display: 'question',\n    // counter: 0\n    // clicked: false\n}\n// function the is passing to the next question{by increasing the index} and adding points for the right ones\n\n    toNext = () => {\n\n        const { questions, index } = this.state;\n        // if(this.state.index > this.state.counter){\n        if (index < 4) {\n            this.setState({\n                index: index + 1,\n                correctAnswer: questions[index + 1].answers[0],\n\n                // points: points + 1000,\n                // counter: this.state.counter+1\n            });\n        } else {\n            this.props.stopPlaying();\n        }\n    }\n\n    checkIf = (e) => {\n\n        const { correctAnswer, points } = this.state;\n\n        const displayedAnswer = e.target.value;\n\n        if (displayedAnswer === correctAnswer) {\n            this.setState({\n                points: points + 1000,\n                display: 'timer',\n            });\n\n            setTimeout(() => {\n                this.toNext();\n            }, 5000);\n        }\n    }\n\n\n    render() {\n\n        const { questions, index, points, display } = this.state;\n\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n\n                    <div className=\"the-yt-quiz\">\n                        {display === 'timer'\n                            ? (\n                                <div>\n                                    <YTCountdown toNext={this.toNext} />\n                                </div>\n                            )\n                            : <div />}\n                        <div className=\"quiz-text\">\n                            <h4 className=\"quiz-text\">{questions[index].question}</h4>\n                            {/* <h6 className ='quiz-text'>\n                                Score:\n                                {points}\n                            </h6> */}\n                        </div>\n                        <div className=\"btn-4-YT\">\n                            {Shuffle(questions[index].answers).map((item, index) => (\n                                <button\n                                    type=\"button\"\n                                    value={item}\n                                    onClick={(e) => { this.checkIf(e); context.addPoints(points); }}\n                                    key={index}\n                                    className=\"myButtonYT buttonYT titleColorYT\"\n                                >\n                                    {item}\n                                </button>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </MyContext.Consumer>\n        );\n    }\n}\n\n\nexport default QuizYT;\n"]},"metadata":{},"sourceType":"module"}