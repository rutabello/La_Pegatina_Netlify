{"ast":null,"code":"var _jsxFileName = \"/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/InstagramRoundTwo/InstagramRoundTwo.js\";\nimport React, { Component } from 'react';\nimport Shuffle from '../../Utils/Shuffle';\nimport ButtonIgRoundTwo from './ButtonIgRoundTwo';\nimport texts from '../../../texts.json';\nimport Loading from '../../Utils/Loading/Loading';\nimport GameEnded from '../../GameEnded/GameEnded';\nimport MembersAccounts from './MembersAccounts';\nimport '../../Instagram/Instagram.css';\n\nclass InstagramRoundTwo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.NUMBER_OF_ATTEMPTS = 6;\n    this.oficial_number_of_attempts = this.NUMBER_OF_ATTEMPTS - 1;\n    this.state = {\n      randomImageSrc: \"\",\n      randomImageLocation: \"\",\n      locationOptions: [],\n      data: [],\n      gameStatus: \"loading\",\n      userClicked: false\n    };\n    this.attempts = 0;\n    this.counter = 0;\n    this.apiCleanedResult = {};\n    this.apiResultLength = 0;\n\n    this.cleanApiResponse = () => {\n      const images = this.state.data.filter(img => img.node.location !== null);\n      const result = images.map(image => ({\n        src: image.node.thumbnail_resources[4].src,\n        location: image.node.location.name\n      }));\n      this.apiCleanedResult = result;\n      this.apiResultLength = result.length;\n    };\n\n    this.setRandomImageAndLocations = () => {\n      Shuffle(this.apiCleanedResult);\n      const firstElement = this.apiCleanedResult.shift();\n      const imagesObjArr = this.apiCleanedResult.slice(0, 3);\n      const threeLocationsArr = imagesObjArr.map(imageObj => imageObj.location);\n      threeLocationsArr.push(firstElement.location); //Cuando hacemos el push, el mismo array, con el mismo nombre, pasa de tener 3 elementos a tener 4. Si igualamos esta array a una constante, no estaríamos guardando la array de 4 elementos resultante sinó que guardaríamos el resultado del push, que sería soplo el número 4, tantos como elementos tiene dentro la array\n\n      const threeRandomPlusCorrectLocationArr = Shuffle(threeLocationsArr);\n      this.setState({\n        randomImageSrc: firstElement.src,\n        randomImageLocation: firstElement.location,\n        locationOptions: threeRandomPlusCorrectLocationArr,\n        gameStatus: 'playing',\n        userClicked: false\n      });\n      this.attempts = this.attempts + 1; // if(this.attempts === this.apiResultLength) {\n\n      if (this.attempts === this.NUMBER_OF_ATTEMPTS) {\n        this.setState({\n          gameStatus: \"gameOver\"\n        });\n      }\n    };\n\n    this.addOneToCounter = () => {\n      this.counter = this.counter + 1;\n    };\n\n    this.userHasClicked = () => {\n      this.setState({\n        userClicked: true\n      });\n    };\n\n    this.profileId = '10934686';\n    this.numberOfPosts = '100';\n  }\n\n  componentDidMount() {\n    fetch(`https://www.instagram.com/graphql/query/?query_hash=e769aa130647d2354c40ea6a439bfc08&variables={\"id\":\"${this.profileId}\",\"first\":${this.numberOfPosts}}`).then(res => res.json()).then(data => this.setState({\n      data: data.data.user.edge_owner_to_timeline_media.edges\n    })).then(() => this.cleanApiResponse()); //   .then(() => this.setRandomImageAndLocations())\n  }\n\n  render() {\n    const {\n      randomImageSrc,\n      locationOptions,\n      userClicked\n    } = this.state;\n\n    if (this.state.gameStatus === \"loading\") {\n      return React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }));\n    }\n\n    if (this.state.gameStatus === \"choosing\") {\n      return React.createElement(\"div\", {\n        className: \"choosing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(MembersAccounts, {\n        setRandomImageAndLocations: this.setRandomImageAndLocations(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }));\n    }\n\n    if (this.state.gameStatus === \"playing\") {\n      return React.createElement(\"div\", {\n        className: \"instagram-game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageAndLocationsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, texts[this.props.language].instagramQuestion), React.createElement(\"div\", {\n        className: \"imageDisplayedContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageDisplayed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: randomImageSrc,\n        alt: \"radom capture from the user's instagram feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"instagram-location-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, locationOptions.map((option, index) => {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"instagram-option-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(ButtonIgRoundTwo, {\n          value: option,\n          currentLocation: this.state.randomImageLocation,\n          addToCounter: this.addOneToCounter,\n          key: index,\n          setRandomImageAndLocations: this.setRandomImageAndLocations,\n          userClicked: userClicked,\n          userHasClicked: this.userHasClicked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }));\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, texts[this.props.language].correctAnswers, \" \", this.counter, \" / \", this.oficial_number_of_attempts)));\n    }\n\n    if (this.state.gameStatus === \"gameOver\") {\n      return React.createElement(GameEnded, {\n        currentGame: \"instagram\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default InstagramRoundTwo;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/InstagramRoundTwo/InstagramRoundTwo.js"],"names":["React","Component","Shuffle","ButtonIgRoundTwo","texts","Loading","GameEnded","MembersAccounts","InstagramRoundTwo","NUMBER_OF_ATTEMPTS","oficial_number_of_attempts","state","randomImageSrc","randomImageLocation","locationOptions","data","gameStatus","userClicked","attempts","counter","apiCleanedResult","apiResultLength","cleanApiResponse","images","filter","img","node","location","result","map","image","src","thumbnail_resources","name","length","setRandomImageAndLocations","firstElement","shift","imagesObjArr","slice","threeLocationsArr","imageObj","push","threeRandomPlusCorrectLocationArr","setState","addOneToCounter","userHasClicked","profileId","numberOfPosts","componentDidMount","fetch","then","res","json","user","edge_owner_to_timeline_media","edges","render","props","language","instagramQuestion","option","index","correctAnswers"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Shuffle from '../../Utils/Shuffle'\nimport ButtonIgRoundTwo from './ButtonIgRoundTwo';\nimport texts from '../../../texts.json';\nimport Loading from '../../Utils/Loading/Loading';\nimport GameEnded from '../../GameEnded/GameEnded';\nimport MembersAccounts from './MembersAccounts';\n\nimport '../../Instagram/Instagram.css';\n\n\nclass InstagramRoundTwo extends Component {\n\n    NUMBER_OF_ATTEMPTS = 6\n    oficial_number_of_attempts = this.NUMBER_OF_ATTEMPTS-1\n\n    state = {\n        randomImageSrc: \"\",\n        randomImageLocation: \"\",\n        locationOptions: [],\n        data: [],\n        gameStatus: \"loading\", \n        userClicked: false,\n    }\n\n    attempts= 0;\n    counter= 0;\n    apiCleanedResult = {}\n    apiResultLength = 0\n\n\n   //Cleans the object retrieved from the api and leaves an array of objects that just have the image source for the picture and the image location\n    cleanApiResponse = () => {\n        const images = this.state.data.filter(img => img.node.location !== null)\n\n        const result = images.map((image) => ({\n            src: image.node.thumbnail_resources[4].src,\n            location: image.node.location.name\n        }))\n\n        this.apiCleanedResult = result;\n\n        this.apiResultLength = result.length\n    }\n\n    //Takes off the first element of the array resulting in cleanApiResponse (called result) and takes the next 3 elements\n    setRandomImageAndLocations = () => {\n\n        Shuffle(this.apiCleanedResult)\n\n        const firstElement = this.apiCleanedResult.shift();\n\n        const imagesObjArr = this.apiCleanedResult.slice(0, 3);\n\n        const threeLocationsArr = imagesObjArr.map((imageObj) => imageObj.location)\n\n        threeLocationsArr.push(firstElement.location) //Cuando hacemos el push, el mismo array, con el mismo nombre, pasa de tener 3 elementos a tener 4. Si igualamos esta array a una constante, no estaríamos guardando la array de 4 elementos resultante sinó que guardaríamos el resultado del push, que sería soplo el número 4, tantos como elementos tiene dentro la array\n\n        const threeRandomPlusCorrectLocationArr = Shuffle(threeLocationsArr)\n\n        this.setState ({\n            randomImageSrc: firstElement.src,\n            randomImageLocation: firstElement.location,\n            locationOptions: threeRandomPlusCorrectLocationArr,\n            gameStatus: 'playing', \n            userClicked: false,\n        })\n\n        this.attempts = this.attempts+1\n\n        // if(this.attempts === this.apiResultLength) {\n        if(this.attempts === this.NUMBER_OF_ATTEMPTS) {\n            this.setState ({\n                gameStatus: \"gameOver\"\n            })\n        }\n    }\n\n    addOneToCounter = () => {\n        this.counter = this.counter+1\n    }\n\n    userHasClicked = () => {\n        this.setState({\n            userClicked: true\n        })\n    }\n\n\n    // 'https://codeofaninja.com/tools/find-instagram-user-id'\n    \n\n    // profileId='32402644';\n    //Rut's ID\n\n    \n    profileId = '10934686';\n    //LaPegatina ID\n    numberOfPosts = '100';\n\n    componentDidMount() {\n        \n        fetch(`https://www.instagram.com/graphql/query/?query_hash=e769aa130647d2354c40ea6a439bfc08&variables={\"id\":\"${this.profileId}\",\"first\":${this.numberOfPosts}}`)\n          .then(res => res.json())\n          .then(data => this.setState({ data: data.data.user.edge_owner_to_timeline_media.edges }))\n          .then(() => this.cleanApiResponse())\n        //   .then(() => this.setRandomImageAndLocations())\n    }\n\n\n    render () {\n\n        const { randomImageSrc, locationOptions, userClicked } = this.state;\n\n        if (this.state.gameStatus === \"loading\") {\n            return (\n                <div className=\"loading\">\n                    <Loading/>\n                </div>\n            )\n        }\n\n        if (this.state.gameStatus===\"choosing\") {\n            return (\n                <div className=\"choosing\">\n                    <MembersAccounts\n                        setRandomImageAndLocations={this.setRandomImageAndLocations()}\n                    />\n                </div>\n            )\n        }\n\n        if (this.state.gameStatus===\"playing\") {\n            return (\n                <div className=\"instagram-game\">\n                    <div className=\"imageAndLocationsContainer\">\n                    <h1>{texts[this.props.language].instagramQuestion}</h1>\n                        <div className=\"imageDisplayedContainer\">\n                            <div className=\"imageDisplayed\">\n                                <img src={randomImageSrc} alt=\"radom capture from the user's instagram feed\" />\n                            </div>\n                        </div>\n                        <div className=\"instagram-location-buttons\">\n                            {locationOptions.map((option, index) => {\n                                return (\n                                    <div key={index} className=\"instagram-option-button\">\n                                        <ButtonIgRoundTwo \n                                            value={option} \n                                            currentLocation={this.state.randomImageLocation} \n                                            addToCounter={this.addOneToCounter} \n                                            key={index} \n                                            setRandomImageAndLocations={this.setRandomImageAndLocations}\n                                            userClicked={userClicked}\n                                            userHasClicked={this.userHasClicked}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <p>{texts[this.props.language].correctAnswers} {this.counter} / {this.oficial_number_of_attempts}</p>\n                    </div>\n                </div>\n            )\n        } if (this.state.gameStatus===\"gameOver\") {\n            return (\n                <GameEnded currentGame={\"instagram\"}/>\n            )\n        }\n    }\n\n}\n\nexport default InstagramRoundTwo;\n\n"]},"metadata":{},"sourceType":"module"}