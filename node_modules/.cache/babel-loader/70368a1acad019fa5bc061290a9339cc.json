{"ast":null,"code":"var _jsxFileName = \"/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/Instagram.js\";\nimport React, { Component } from 'react';\nimport Shuffle from '../Utils/Shuffle';\nimport ButtonIG from './Button_Ig';\nimport './Instagram.css';\n\nclass Instagram extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      randomImageSrc: \"\",\n      randomImageLocation: \"\",\n      locationOptions: []\n    };\n    this.counter = 0;\n    this.apiCleanedResult = {};\n\n    this.cleanApiResponse = apiResponse => {\n      const images = apiResponse.edge_owner_to_timeline_media.edges.filter(img => img.node.location !== null);\n      const result = images.map(image => ({\n        src: image.node.thumbnail_resources[4].src,\n        location: image.node.location.name\n      }));\n      this.apiCleanedResult = result;\n    };\n\n    this.setRandomImageAndLocations = () => {\n      Shuffle(this.apiCleanedResult);\n      const firstElement = this.apiCleanedResult.shift();\n      const imagesObjArr = this.apiCleanedResult.slice(0, 3);\n      const threeLocationsArr = imagesObjArr.map(imageObj => imageObj.location);\n      threeLocationsArr.push(firstElement.location); //Cuando hacemos el push, el mismo array, con el mismo nombre, pasa de tener 3 elementos a tener 4. Si igualamos esta array a una constante, no estaríamos guardando la array de 4 elementos resultante sinó que guardaríamos el resultado del push, que sería soplo el número 4, tantos como elementos tiene dentro la array\n\n      const threeRandomPlusCorrectLocationArr = Shuffle(threeLocationsArr);\n      console.log(threeLocationsArr, threeRandomPlusCorrectLocationArr);\n      this.setState({\n        randomImageSrc: firstElement.src,\n        randomImageLocation: firstElement.location,\n        locationOptions: threeRandomPlusCorrectLocationArr\n      });\n      this.attempts = this.attempts + 1;\n    };\n\n    this.addOneToCounter = () => {\n      this.counter = this.counter + 1;\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('https://www.instagram.com/bestvacations/?__a=1');\n    const data = await response.json();\n    console.log(\"FROM the API\", data.graphql);\n    const info = data.graphql.user;\n    this.cleanApiResponse(info);\n    this.setRandomImageAndLocations();\n  }\n\n  render() {\n    const {\n      randomImageSrc,\n      locationOptions\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"imageAndLocationsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"imageDisplayedContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"imageDisplayed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: randomImageSrc,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), locationOptions.map((option, index) => {\n      return React.createElement(ButtonIG, {\n        value: option,\n        currentLocation: this.state.randomImageLocation,\n        addToCounter: this.addOneToCounter,\n        key: index,\n        setRandomImageAndLocations: this.setRandomImageAndLocations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Respuestas correctas: \", this.counter));\n  }\n\n}\n\nexport default Instagram;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/Instagram.js"],"names":["React","Component","Shuffle","ButtonIG","Instagram","state","randomImageSrc","randomImageLocation","locationOptions","counter","apiCleanedResult","cleanApiResponse","apiResponse","images","edge_owner_to_timeline_media","edges","filter","img","node","location","result","map","image","src","thumbnail_resources","name","setRandomImageAndLocations","firstElement","shift","imagesObjArr","slice","threeLocationsArr","imageObj","push","threeRandomPlusCorrectLocationArr","console","log","setState","attempts","addOneToCounter","componentDidMount","response","fetch","data","json","graphql","info","user","render","option","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Shuffle from '../Utils/Shuffle'\nimport ButtonIG from './Button_Ig';\n\nimport './Instagram.css';\n\nclass Instagram extends Component {\n\n    state = {\n        randomImageSrc: \"\",\n        randomImageLocation: \"\",\n        locationOptions: [],\n    }\n\n    counter= 0\n    apiCleanedResult = {}\n\n\n   //Cleans the object retrieved from the api and leaves an array of objects that just have the image source for the picture and the image location\n    cleanApiResponse = (apiResponse) => {\n        const images = apiResponse.edge_owner_to_timeline_media.edges.filter(img => img.node.location !== null)\n\n        const result = images.map((image) => ({\n            src: image.node.thumbnail_resources[4].src,\n            location: image.node.location.name\n        }))\n\n        this.apiCleanedResult = result;\n    }\n\n    //Takes off the first element of the array resulting in cleanApiResponse (called result) and takes the next 3 elements\n    setRandomImageAndLocations = () => {\n        Shuffle(this.apiCleanedResult)\n\n        const firstElement = this.apiCleanedResult.shift();\n\n        const imagesObjArr = this.apiCleanedResult.slice(0, 3);\n\n        const threeLocationsArr = imagesObjArr.map((imageObj) => imageObj.location)\n\n        threeLocationsArr.push(firstElement.location) //Cuando hacemos el push, el mismo array, con el mismo nombre, pasa de tener 3 elementos a tener 4. Si igualamos esta array a una constante, no estaríamos guardando la array de 4 elementos resultante sinó que guardaríamos el resultado del push, que sería soplo el número 4, tantos como elementos tiene dentro la array\n\n        const threeRandomPlusCorrectLocationArr = Shuffle(threeLocationsArr)\n\n        console.log(threeLocationsArr, threeRandomPlusCorrectLocationArr)\n\n        this.setState ({\n            randomImageSrc: firstElement.src,\n            randomImageLocation: firstElement.location,\n            locationOptions: threeRandomPlusCorrectLocationArr,\n        })\n\n        this.attempts = this.attempts+1\n    }\n\n    addOneToCounter = () => {\n        this.counter = this.counter+1\n    }\n\n\n    async componentDidMount() {\n    \n        const response = await fetch('https://www.instagram.com/bestvacations/?__a=1');\n    \n        const data = await response.json();\n    \n        console.log(\"FROM the API\", data.graphql);\n\n        const info = data.graphql.user\n\n        this.cleanApiResponse(info)\n\n        this.setRandomImageAndLocations()\n\n    };\n\n\n\n\n    render () {\n\n        const { randomImageSrc, locationOptions } = this.state;\n\n        return (\n            <div className=\"imageAndLocationsContainer\">\n                <div className=\"imageDisplayedContainer\">\n                    <div className=\"imageDisplayed\">\n                        <img src={randomImageSrc} alt=\"\" />\n                    </div>\n                </div>\n\n                {locationOptions.map((option, index) => {\n                    return (\n                        <ButtonIG value={option} currentLocation={this.state.randomImageLocation} addToCounter={this.addOneToCounter} key={index} setRandomImageAndLocations={this.setRandomImageAndLocations}\n                        >\n                        </ButtonIG>\n                    )\n                })}\n                <p>Respuestas correctas: {this.counter}</p>\n            </div>\n        )\n    }\n\n}\n\nexport default Instagram;\n\n"]},"metadata":{},"sourceType":"module"}