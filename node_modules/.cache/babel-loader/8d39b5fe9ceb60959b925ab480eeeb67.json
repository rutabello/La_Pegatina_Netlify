{"ast":null,"code":"var _jsxFileName = \"/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/Instagram.js\";\nimport React, { Component } from 'react';\nimport Shuffle from '../Utils/Shuffle';\nimport ButtonIG from './Button_Ig';\n\nclass Instagram extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imagesWithLocationArrOfObj: [],\n      //imagesFromAPIArrOfObj but only the ones that have .location. Still an array of objects\n      allPicturesLocationsArr: [],\n      //Array with just the NAMES of the locations of ALL images retrieved from the API that DO have a location\n      fourLocationsToPrintInTheButtonArr: []\n    };\n\n    this.parserApiResponse = () => {\n      this.state.imagesWithLocationArrOfObj;\n    };\n\n    this.getPhotosToDisplay = () => {\n      this.setState({\n        onlyImagesArr: Shuffle(this.state.imagesWithLocationArrOfObj.map(image => image.node.thumbnail_resources[4].src))\n      });\n      this.getFourPhotosToDisplay();\n    };\n\n    this.getFourPhotosToDisplay = () => {\n      let fourPhotosToDisplayArr = this.state.onlyImagesArr.slice(0, 4);\n      this.setState({\n        fourImagesArr: fourPhotosToDisplayArr\n      });\n      this.getFourLocationsToPrintInTheButtons();\n    };\n\n    this.getFourLocationsToPrintInTheButtons = () => {\n      let fourLocationsToPrintInTheButtonArr = this.state.allPicturesLocationsArr.slice(0, 4);\n      this.setState({\n        fourLocationsToPrintInTheButtonArr\n      });\n    };\n\n    this.cleanApiResponse = X => {\n      const images = X.edge_owner_to_timeline_media.edges.filter(img => img.node.locationv !== null);\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('https://www.instagram.com/bestvacations/?__a=1');\n    const data = await response.json();\n    console.log(\"FROM the API\", data.graphql);\n    const info = data.graphql.user;\n    const imagesWithLocationArrOfObj = data.graphql.user.edge_owner_to_timeline_media.edges.filter(img => img.node.location !== null);\n    this.setState({\n      imagesWithLocationArrOfObj\n    }); // this.getPhotosToDisplay();\n  }\n\n  render() {\n    const {\n      imageCounter,\n      fourImagesArr,\n      fourLocationsToPrintInTheButtonArr\n    } = this.state;\n    console.log(fourLocationsToPrintInTheButtonArr);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: fourImagesArr[imageCounter],\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), fourLocationsToPrintInTheButtonArr.map(location => {\n      return React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, location);\n    }));\n  }\n\n}\n\nexport default Instagram;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/Instagram.js"],"names":["React","Component","Shuffle","ButtonIG","Instagram","state","imagesWithLocationArrOfObj","allPicturesLocationsArr","fourLocationsToPrintInTheButtonArr","parserApiResponse","getPhotosToDisplay","setState","onlyImagesArr","map","image","node","thumbnail_resources","src","getFourPhotosToDisplay","fourPhotosToDisplayArr","slice","fourImagesArr","getFourLocationsToPrintInTheButtons","cleanApiResponse","X","images","edge_owner_to_timeline_media","edges","filter","img","locationv","componentDidMount","response","fetch","data","json","console","log","graphql","info","user","location","render","imageCounter"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Shuffle from '../Utils/Shuffle'\nimport ButtonIG from './Button_Ig';\n\nclass Instagram extends Component {\n\n    state= {\n        imagesWithLocationArrOfObj: [], //imagesFromAPIArrOfObj but only the ones that have .location. Still an array of objects\n        allPicturesLocationsArr: [], //Array with just the NAMES of the locations of ALL images retrieved from the API that DO have a location\n        fourLocationsToPrintInTheButtonArr: [],\n    }\n\n    //\n    parserApiResponse = () => {\n        this.state. imagesWithLocationArrOfObj\n    }\n\n    getPhotosToDisplay = () => { \n        \n        this.setState({\n            onlyImagesArr: Shuffle(this.state.imagesWithLocationArrOfObj.map((image) => image.node.thumbnail_resources[4].src))\n        })\n\n        this.getFourPhotosToDisplay();\n    }\n\n    getFourPhotosToDisplay = () => {\n\n        let fourPhotosToDisplayArr = this.state.onlyImagesArr.slice(0, 4);\n        \n        this.setState({\n            fourImagesArr: fourPhotosToDisplayArr\n        })\n\n        this.getFourLocationsToPrintInTheButtons();\n    }\n\n    getFourLocationsToPrintInTheButtons = () => {\n        let fourLocationsToPrintInTheButtonArr = this.state.allPicturesLocationsArr.slice(0, 4);\n\n        this.setState({\n            fourLocationsToPrintInTheButtonArr\n        })\n    }\n\n    cleanApiResponse = (X) => {\n        const images = X.edge_owner_to_timeline_media.edges.filter(img => img.node.locationv !== null)\n    }\n\n\n    async componentDidMount() {\n    \n        const response = await fetch('https://www.instagram.com/bestvacations/?__a=1');\n    \n        const data = await response.json();\n    \n        console.log(\"FROM the API\", data.graphql);\n\n        const info = data.graphql.user\n\n\n        const imagesWithLocationArrOfObj = data.graphql.user.edge_owner_to_timeline_media.edges.filter(img => img.node.location !== null)\n\n        this.setState ({\n            imagesWithLocationArrOfObj,\n        })\n\n        // this.getPhotosToDisplay();\n    };\n\n\n\n\n    render () {\n\n        const { imageCounter, fourImagesArr, fourLocationsToPrintInTheButtonArr } = this.state;\n\n        console.log(fourLocationsToPrintInTheButtonArr)\n\n        return (\n            <div>\n\n                <img src={fourImagesArr[imageCounter]} alt=\"\" />\n\n                {fourLocationsToPrintInTheButtonArr.map((location) => {\n                    return (\n                        <button>{location}</button>\n                    )\n                })}\n            </div>\n        )\n    }\n\n}\n\nexport default Instagram;\n\n"]},"metadata":{},"sourceType":"module"}