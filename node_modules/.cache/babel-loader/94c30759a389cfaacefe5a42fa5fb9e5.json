{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport isEqual from 'fast-deep-equal';\nimport youTubePlayer from 'youtube-player';\n/**\r\n * Check whether a `props` change should result in the video being updated.\r\n *\r\n * @param {Object} prevProps\r\n * @param {Object} props\r\n */\n\nfunction shouldUpdateVideo(prevProps, props) {\n  // A changing video should always trigger an update\n  if (prevProps.videoId !== props.videoId) {\n    return true;\n  } // Otherwise, a change in the start/end time playerVars also requires a player\n  // update.\n\n\n  var prevVars = prevProps.opts.playerVars || {};\n  var vars = props.opts.playerVars || {};\n  return prevVars.start !== vars.start || prevVars.end !== vars.end;\n}\n/**\r\n * Neutralise API options that only require a video update, leaving only options\r\n * that require a player reset. The results can then be compared to see if a\r\n * player reset is necessary.\r\n *\r\n * @param {Object} opts\r\n */\n\n\nfunction filterResetOptions(opts) {\n  return _extends({}, opts, {\n    playerVars: _extends({}, opts.playerVars, {\n      autoplay: 0,\n      start: 0,\n      end: 0\n    })\n  });\n}\n/**\r\n * Check whether a `props` change should result in the player being reset.\r\n * The player is reset when the `props.opts` change, except if the only change\r\n * is in the `start` and `end` playerVars, because a video update can deal with\r\n * those.\r\n *\r\n * @param {Object} prevProps\r\n * @param {Object} props\r\n */\n\n\nfunction shouldResetPlayer(prevProps, props) {\n  return !isEqual(filterResetOptions(prevProps.opts), filterResetOptions(props.opts));\n}\n/**\r\n * Check whether a props change should result in an id or className update.\r\n *\r\n * @param {Object} prevProps\r\n * @param {Object} props\r\n */\n\n\nfunction shouldUpdatePlayer(prevProps, props) {\n  return prevProps.id !== props.id || prevProps.className !== props.className;\n}\n\nvar YouTube = function (_React$Component) {\n  _inherits(YouTube, _React$Component);\n\n  function YouTube(props) {\n    _classCallCheck(this, YouTube);\n\n    var _this = _possibleConstructorReturn(this, (YouTube.__proto__ || Object.getPrototypeOf(YouTube)).call(this, props));\n\n    _this.onPlayerReady = function (event) {\n      return _this.props.onReady(event);\n    };\n\n    _this.onPlayerError = function (event) {\n      return _this.props.onError(event);\n    };\n\n    _this.onPlayerStateChange = function (event) {\n      _this.props.onStateChange(event);\n\n      switch (event.data) {\n        case YouTube.PlayerState.ENDED:\n          _this.props.onEnd(event);\n\n          break;\n\n        case YouTube.PlayerState.PLAYING:\n          _this.props.onPlay(event);\n\n          break;\n\n        case YouTube.PlayerState.PAUSED:\n          _this.props.onPause(event);\n\n          break;\n\n        default:\n      }\n    };\n\n    _this.onPlayerPlaybackRateChange = function (event) {\n      return _this.props.onPlaybackRateChange(event);\n    };\n\n    _this.onPlayerPlaybackQualityChange = function (event) {\n      return _this.props.onPlaybackQualityChange(event);\n    };\n\n    _this.createPlayer = function () {\n      // do not attempt to create a player server-side, it won't work\n      if (typeof document === 'undefined') return; // create player\n\n      var playerOpts = _extends({}, _this.props.opts, {\n        // preload the `videoId` video if one is already given\n        videoId: _this.props.videoId\n      });\n\n      _this.internalPlayer = youTubePlayer(_this.container, playerOpts); // attach event handlers\n\n      _this.internalPlayer.on('ready', _this.onPlayerReady);\n\n      _this.internalPlayer.on('error', _this.onPlayerError);\n\n      _this.internalPlayer.on('stateChange', _this.onPlayerStateChange);\n\n      _this.internalPlayer.on('playbackRateChange', _this.onPlayerPlaybackRateChange);\n\n      _this.internalPlayer.on('playbackQualityChange', _this.onPlayerPlaybackQualityChange);\n    };\n\n    _this.resetPlayer = function () {\n      return _this.internalPlayer.destroy().then(_this.createPlayer);\n    };\n\n    _this.updatePlayer = function () {\n      _this.internalPlayer.getIframe().then(function (iframe) {\n        if (_this.props.id) iframe.setAttribute('id', _this.props.id);else iframe.removeAttribute('id');\n        if (_this.props.className) iframe.setAttribute('class', _this.props.className);else iframe.removeAttribute('class');\n      });\n    };\n\n    _this.updateVideo = function () {\n      if (typeof _this.props.videoId === 'undefined' || _this.props.videoId === null) {\n        _this.internalPlayer.stopVideo();\n\n        return;\n      } // set queueing options\n\n\n      var autoplay = false;\n      var opts = {\n        videoId: _this.props.videoId\n      };\n\n      if ('playerVars' in _this.props.opts) {\n        autoplay = _this.props.opts.playerVars.autoplay === 1;\n\n        if ('start' in _this.props.opts.playerVars) {\n          opts.startSeconds = _this.props.opts.playerVars.start;\n        }\n\n        if ('end' in _this.props.opts.playerVars) {\n          opts.endSeconds = _this.props.opts.playerVars.end;\n        }\n      } // if autoplay is enabled loadVideoById\n\n\n      if (autoplay) {\n        _this.internalPlayer.loadVideoById(opts);\n\n        return;\n      } // default behaviour just cues the video\n\n\n      _this.internalPlayer.cueVideoById(opts);\n    };\n\n    _this.refContainer = function (container) {\n      _this.container = container;\n    };\n\n    _this.container = null;\n    _this.internalPlayer = null;\n    return _this;\n  }\n  /**\r\n    * Expose PlayerState constants for convenience. These constants can also be\r\n    * accessed through the global YT object after the YouTube IFrame API is instantiated.\r\n    * https://developers.google.com/youtube/iframe_api_reference#onStateChange\r\n    */\n\n\n  _createClass(YouTube, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.createPlayer();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (shouldUpdatePlayer(prevProps, this.props)) {\n        this.updatePlayer();\n      }\n\n      if (shouldResetPlayer(prevProps, this.props)) {\n        this.resetPlayer();\n      }\n\n      if (shouldUpdateVideo(prevProps, this.props)) {\n        this.updateVideo();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      /**\r\n       * Note: The `youtube-player` package that is used promisifies all Youtube\r\n       * Player API calls, which introduces a delay of a tick before it actually\r\n       * gets destroyed. Since React attempts to remove the element instantly\r\n       * this method isn't quick enough to reset the container element.\r\n       */\n      this.internalPlayer.destroy();\n    }\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onReady\r\n     *\r\n     * @param {Object} event\r\n     *   @param {Object} target - player object\r\n     */\n\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onError\r\n     *\r\n     * @param {Object} event\r\n     *   @param {Integer} data  - error type\r\n     *   @param {Object} target - player object\r\n     */\n\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onStateChange\r\n     *\r\n     * @param {Object} event\r\n     *   @param {Integer} data  - status change type\r\n     *   @param {Object} target - actual YT player\r\n     */\n\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onPlaybackRateChange\r\n     *\r\n     * @param {Object} event\r\n     *   @param {Float} data    - playback rate\r\n     *   @param {Object} target - actual YT player\r\n     */\n\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onPlaybackQualityChange\r\n     *\r\n     * @param {Object} event\r\n     *   @param {String} data   - playback quality\r\n     *   @param {Object} target - actual YT player\r\n     */\n\n    /**\r\n     * Initialize the Youtube Player API on the container and attach event handlers\r\n     */\n\n    /**\r\n     * Shorthand for destroying and then re-creating the Youtube Player\r\n     */\n\n    /**\r\n     * Method to update the id and class of the Youtube Player iframe.\r\n     * React should update this automatically but since the Youtube Player API\r\n     * replaced the DIV that is mounted by React we need to do this manually.\r\n     */\n\n    /**\r\n     * Call Youtube Player API methods to update the currently playing video.\r\n     * Depeding on the `opts.playerVars.autoplay` this function uses one of two\r\n     * Youtube Player API methods to update the video.\r\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('div', {\n        className: this.props.containerClassName\n      }, React.createElement('div', {\n        id: this.props.id,\n        className: this.props.className,\n        ref: this.refContainer\n      }));\n    }\n  }]);\n\n  return YouTube;\n}(React.Component);\n\nYouTube.propTypes = {\n  videoId: PropTypes.string,\n  // custom ID for player element\n  id: PropTypes.string,\n  // custom class name for player element\n  className: PropTypes.string,\n  // custom class name for player container element\n  containerClassName: PropTypes.string,\n  // https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n  opts: PropTypes.objectOf(PropTypes.any),\n  // event subscriptions\n  onReady: PropTypes.func,\n  onError: PropTypes.func,\n  onPlay: PropTypes.func,\n  onPause: PropTypes.func,\n  onEnd: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onPlaybackQualityChange: PropTypes.func\n};\nYouTube.defaultProps = {\n  id: null,\n  className: null,\n  opts: {},\n  containerClassName: '',\n  onReady: function onReady() {},\n  onError: function onError() {},\n  onPlay: function onPlay() {},\n  onPause: function onPause() {},\n  onEnd: function onEnd() {},\n  onStateChange: function onStateChange() {},\n  onPlaybackRateChange: function onPlaybackRateChange() {},\n  onPlaybackQualityChange: function onPlaybackQualityChange() {}\n};\nYouTube.PlayerState = {\n  UNSTARTED: -1,\n  ENDED: 0,\n  PLAYING: 1,\n  PAUSED: 2,\n  BUFFERING: 3,\n  CUED: 5\n};\nexport default YouTube;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/node_modules/react-youtube/es/YouTube.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_extends","assign","arguments","source","hasOwnProperty","call","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","PropTypes","React","isEqual","youTubePlayer","shouldUpdateVideo","prevProps","videoId","prevVars","opts","playerVars","vars","start","end","filterResetOptions","autoplay","shouldResetPlayer","shouldUpdatePlayer","id","className","YouTube","_React$Component","_this","getPrototypeOf","onPlayerReady","event","onReady","onPlayerError","onError","onPlayerStateChange","onStateChange","data","PlayerState","ENDED","onEnd","PLAYING","onPlay","PAUSED","onPause","onPlayerPlaybackRateChange","onPlaybackRateChange","onPlayerPlaybackQualityChange","onPlaybackQualityChange","createPlayer","document","playerOpts","internalPlayer","container","on","resetPlayer","destroy","then","updatePlayer","getIframe","iframe","setAttribute","removeAttribute","updateVideo","stopVideo","startSeconds","endSeconds","loadVideoById","cueVideoById","refContainer","componentDidMount","componentDidUpdate","componentWillUnmount","render","createElement","containerClassName","ref","Component","propTypes","string","objectOf","any","func","defaultProps","UNSTARTED","BUFFERING","CUED"],"mappings":"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","sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport isEqual from 'fast-deep-equal';\nimport youTubePlayer from 'youtube-player';\n\n/**\r\n * Check whether a `props` change should result in the video being updated.\r\n *\r\n * @param {Object} prevProps\r\n * @param {Object} props\r\n */\nfunction shouldUpdateVideo(prevProps, props) {\n  // A changing video should always trigger an update\n  if (prevProps.videoId !== props.videoId) {\n    return true;\n  }\n\n  // Otherwise, a change in the start/end time playerVars also requires a player\n  // update.\n  var prevVars = prevProps.opts.playerVars || {};\n  var vars = props.opts.playerVars || {};\n\n  return prevVars.start !== vars.start || prevVars.end !== vars.end;\n}\n\n/**\r\n * Neutralise API options that only require a video update, leaving only options\r\n * that require a player reset. The results can then be compared to see if a\r\n * player reset is necessary.\r\n *\r\n * @param {Object} opts\r\n */\nfunction filterResetOptions(opts) {\n  return _extends({}, opts, {\n    playerVars: _extends({}, opts.playerVars, {\n      autoplay: 0,\n      start: 0,\n      end: 0\n    })\n  });\n}\n\n/**\r\n * Check whether a `props` change should result in the player being reset.\r\n * The player is reset when the `props.opts` change, except if the only change\r\n * is in the `start` and `end` playerVars, because a video update can deal with\r\n * those.\r\n *\r\n * @param {Object} prevProps\r\n * @param {Object} props\r\n */\nfunction shouldResetPlayer(prevProps, props) {\n  return !isEqual(filterResetOptions(prevProps.opts), filterResetOptions(props.opts));\n}\n\n/**\r\n * Check whether a props change should result in an id or className update.\r\n *\r\n * @param {Object} prevProps\r\n * @param {Object} props\r\n */\nfunction shouldUpdatePlayer(prevProps, props) {\n  return prevProps.id !== props.id || prevProps.className !== props.className;\n}\n\nvar YouTube = function (_React$Component) {\n  _inherits(YouTube, _React$Component);\n\n  function YouTube(props) {\n    _classCallCheck(this, YouTube);\n\n    var _this = _possibleConstructorReturn(this, (YouTube.__proto__ || Object.getPrototypeOf(YouTube)).call(this, props));\n\n    _this.onPlayerReady = function (event) {\n      return _this.props.onReady(event);\n    };\n\n    _this.onPlayerError = function (event) {\n      return _this.props.onError(event);\n    };\n\n    _this.onPlayerStateChange = function (event) {\n      _this.props.onStateChange(event);\n      switch (event.data) {\n\n        case YouTube.PlayerState.ENDED:\n          _this.props.onEnd(event);\n          break;\n\n        case YouTube.PlayerState.PLAYING:\n          _this.props.onPlay(event);\n          break;\n\n        case YouTube.PlayerState.PAUSED:\n          _this.props.onPause(event);\n          break;\n\n        default:\n      }\n    };\n\n    _this.onPlayerPlaybackRateChange = function (event) {\n      return _this.props.onPlaybackRateChange(event);\n    };\n\n    _this.onPlayerPlaybackQualityChange = function (event) {\n      return _this.props.onPlaybackQualityChange(event);\n    };\n\n    _this.createPlayer = function () {\n      // do not attempt to create a player server-side, it won't work\n      if (typeof document === 'undefined') return;\n      // create player\n      var playerOpts = _extends({}, _this.props.opts, {\n        // preload the `videoId` video if one is already given\n        videoId: _this.props.videoId\n      });\n      _this.internalPlayer = youTubePlayer(_this.container, playerOpts);\n      // attach event handlers\n      _this.internalPlayer.on('ready', _this.onPlayerReady);\n      _this.internalPlayer.on('error', _this.onPlayerError);\n      _this.internalPlayer.on('stateChange', _this.onPlayerStateChange);\n      _this.internalPlayer.on('playbackRateChange', _this.onPlayerPlaybackRateChange);\n      _this.internalPlayer.on('playbackQualityChange', _this.onPlayerPlaybackQualityChange);\n    };\n\n    _this.resetPlayer = function () {\n      return _this.internalPlayer.destroy().then(_this.createPlayer);\n    };\n\n    _this.updatePlayer = function () {\n      _this.internalPlayer.getIframe().then(function (iframe) {\n        if (_this.props.id) iframe.setAttribute('id', _this.props.id);else iframe.removeAttribute('id');\n        if (_this.props.className) iframe.setAttribute('class', _this.props.className);else iframe.removeAttribute('class');\n      });\n    };\n\n    _this.updateVideo = function () {\n      if (typeof _this.props.videoId === 'undefined' || _this.props.videoId === null) {\n        _this.internalPlayer.stopVideo();\n        return;\n      }\n\n      // set queueing options\n      var autoplay = false;\n      var opts = {\n        videoId: _this.props.videoId\n      };\n      if ('playerVars' in _this.props.opts) {\n        autoplay = _this.props.opts.playerVars.autoplay === 1;\n        if ('start' in _this.props.opts.playerVars) {\n          opts.startSeconds = _this.props.opts.playerVars.start;\n        }\n        if ('end' in _this.props.opts.playerVars) {\n          opts.endSeconds = _this.props.opts.playerVars.end;\n        }\n      }\n\n      // if autoplay is enabled loadVideoById\n      if (autoplay) {\n        _this.internalPlayer.loadVideoById(opts);\n        return;\n      }\n      // default behaviour just cues the video\n      _this.internalPlayer.cueVideoById(opts);\n    };\n\n    _this.refContainer = function (container) {\n      _this.container = container;\n    };\n\n    _this.container = null;\n    _this.internalPlayer = null;\n    return _this;\n  }\n\n  /**\r\n    * Expose PlayerState constants for convenience. These constants can also be\r\n    * accessed through the global YT object after the YouTube IFrame API is instantiated.\r\n    * https://developers.google.com/youtube/iframe_api_reference#onStateChange\r\n    */\n\n\n  _createClass(YouTube, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.createPlayer();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (shouldUpdatePlayer(prevProps, this.props)) {\n        this.updatePlayer();\n      }\n\n      if (shouldResetPlayer(prevProps, this.props)) {\n        this.resetPlayer();\n      }\n\n      if (shouldUpdateVideo(prevProps, this.props)) {\n        this.updateVideo();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      /**\r\n       * Note: The `youtube-player` package that is used promisifies all Youtube\r\n       * Player API calls, which introduces a delay of a tick before it actually\r\n       * gets destroyed. Since React attempts to remove the element instantly\r\n       * this method isn't quick enough to reset the container element.\r\n       */\n      this.internalPlayer.destroy();\n    }\n\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onReady\r\n     *\r\n     * @param {Object} event\r\n     *   @param {Object} target - player object\r\n     */\n\n\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onError\r\n     *\r\n     * @param {Object} event\r\n     *   @param {Integer} data  - error type\r\n     *   @param {Object} target - player object\r\n     */\n\n\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onStateChange\r\n     *\r\n     * @param {Object} event\r\n     *   @param {Integer} data  - status change type\r\n     *   @param {Object} target - actual YT player\r\n     */\n\n\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onPlaybackRateChange\r\n     *\r\n     * @param {Object} event\r\n     *   @param {Float} data    - playback rate\r\n     *   @param {Object} target - actual YT player\r\n     */\n\n\n    /**\r\n     * https://developers.google.com/youtube/iframe_api_reference#onPlaybackQualityChange\r\n     *\r\n     * @param {Object} event\r\n     *   @param {String} data   - playback quality\r\n     *   @param {Object} target - actual YT player\r\n     */\n\n\n    /**\r\n     * Initialize the Youtube Player API on the container and attach event handlers\r\n     */\n\n\n    /**\r\n     * Shorthand for destroying and then re-creating the Youtube Player\r\n     */\n\n\n    /**\r\n     * Method to update the id and class of the Youtube Player iframe.\r\n     * React should update this automatically but since the Youtube Player API\r\n     * replaced the DIV that is mounted by React we need to do this manually.\r\n     */\n\n\n    /**\r\n     * Call Youtube Player API methods to update the currently playing video.\r\n     * Depeding on the `opts.playerVars.autoplay` this function uses one of two\r\n     * Youtube Player API methods to update the video.\r\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement(\n        'div',\n        { className: this.props.containerClassName },\n        React.createElement('div', { id: this.props.id, className: this.props.className, ref: this.refContainer })\n      );\n    }\n  }]);\n\n  return YouTube;\n}(React.Component);\n\nYouTube.propTypes = {\n  videoId: PropTypes.string,\n\n  // custom ID for player element\n  id: PropTypes.string,\n\n  // custom class name for player element\n  className: PropTypes.string,\n  // custom class name for player container element\n  containerClassName: PropTypes.string,\n\n  // https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n  opts: PropTypes.objectOf(PropTypes.any),\n\n  // event subscriptions\n  onReady: PropTypes.func,\n  onError: PropTypes.func,\n  onPlay: PropTypes.func,\n  onPause: PropTypes.func,\n  onEnd: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onPlaybackQualityChange: PropTypes.func\n};\nYouTube.defaultProps = {\n  id: null,\n  className: null,\n  opts: {},\n  containerClassName: '',\n  onReady: function onReady() {},\n  onError: function onError() {},\n  onPlay: function onPlay() {},\n  onPause: function onPause() {},\n  onEnd: function onEnd() {},\n  onStateChange: function onStateChange() {},\n  onPlaybackRateChange: function onPlaybackRateChange() {},\n  onPlaybackQualityChange: function onPlaybackQualityChange() {}\n};\nYouTube.PlayerState = {\n  UNSTARTED: -1,\n  ENDED: 0,\n  PLAYING: 1,\n  PAUSED: 2,\n  BUFFERING: 3,\n  CUED: 5\n};\n\n\nexport default YouTube;"]},"metadata":{},"sourceType":"module"}