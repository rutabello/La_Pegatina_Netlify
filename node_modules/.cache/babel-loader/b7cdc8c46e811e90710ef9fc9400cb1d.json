{"ast":null,"code":"var _jsxFileName = \"/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Youtube/QuizYT/QuizYT.js\";\n\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport Shuffle from '../../Utils/Shuffle';\n\nclass QuizYT extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: this.props.questions,\n      index: 0,\n      // gameStatus: \"playing\",\n      correctAnswer: this.props.questions[0].answers[0],\n      points: 0 // counter: 0\n      // clicked: false\n\n    };\n\n    this.toNext = () => {\n      const {\n        questions,\n        index,\n        points\n      } = this.state; // if(this.state.index > this.state.counter){\n\n      if (index < 4) {\n        this.setState({\n          index: index + 1,\n          correctAnswer: questions[index + 1].answers[0],\n          points: points + 1000 // counter: this.state.counter+1\n\n        });\n      } else {\n        this.props.stopPlaying();\n      }\n    };\n\n    this.checkIf = e => {\n      const {\n        correctAnswer\n      } = this.state;\n      const displayedAnswer = e.target.value;\n\n      if (displayedAnswer === correctAnswer) {\n        this.toNext();\n      }\n    };\n  }\n\n  // IF CONDITION FOR THE GAME ENDING\n  render() {\n    const {\n      questions,\n      index,\n      points\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"the-yt-quiz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"quiz-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, questions[index].question), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Score:\", points)), React.createElement(\"div\", {\n      className: \"btn-4-YT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, Shuffle(questions[index].answers).map((item, index) => React.createElement(\"button\", {\n      type: \"button\",\n      value: item,\n      onClick: e => this.checkIf(e),\n      key: index,\n      className: \"myButtonYT buttonYT titleColorYT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, item))));\n  }\n\n}\n\nexport default QuizYT;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Youtube/QuizYT/QuizYT.js"],"names":["React","Component","Shuffle","QuizYT","state","questions","props","index","correctAnswer","answers","points","toNext","setState","stopPlaying","checkIf","e","displayedAnswer","target","value","render","question","map","item"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAGA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE/BG,KAF+B,GAEzB;AACFC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SADpB;AAEFE,MAAAA,KAAK,EAAE,CAFL;AAGF;AACAC,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWD,SAAX,CAAqB,CAArB,EAAwBI,OAAxB,CAAgC,CAAhC,CAJb;AAKFC,MAAAA,MAAM,EAAE,CALN,CAMF;AACA;;AAPE,KAFyB;;AAAA,SAa3BC,MAb2B,GAalB,MAAM;AAEX,YAAM;AAAEN,QAAAA,SAAF;AAAaE,QAAAA,KAAb;AAAoBG,QAAAA;AAApB,UAA+B,KAAKN,KAA1C,CAFW,CAGX;;AACA,UAAIG,KAAK,GAAG,CAAZ,EAAe;AACX,aAAKK,QAAL,CAAc;AACVL,UAAAA,KAAK,EAAEA,KAAK,GAAG,CADL;AAEVC,UAAAA,aAAa,EAAEH,SAAS,CAACE,KAAK,GAAG,CAAT,CAAT,CAAqBE,OAArB,CAA6B,CAA7B,CAFL;AAGVC,UAAAA,MAAM,EAAEA,MAAM,GAAG,IAHP,CAIV;;AAJU,SAAd;AAMH,OAPD,MAOO;AACH,aAAKJ,KAAL,CAAWO,WAAX;AACH;AACJ,KA3B0B;;AAAA,SAgC3BC,OAhC2B,GAgChBC,CAAD,IAAO;AAEb,YAAM;AAAEP,QAAAA;AAAF,UAAoB,KAAKJ,KAA/B;AAEA,YAAMY,eAAe,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAjC;;AAEA,UAAIF,eAAe,KAAKR,aAAxB,EAAuC;AACnC,aAAKG,MAAL;AACH;AACJ,KAzC0B;AAAA;;AA0C3B;AAEAQ,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEd,MAAAA,SAAF;AAAaE,MAAAA,KAAb;AAAoBG,MAAAA;AAApB,QAA+B,KAAKN,KAA1C;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,SAAS,CAACE,KAAD,CAAT,CAAiBa,QAAtB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEKV,MAFL,CAFJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,OAAO,CAACG,SAAS,CAACE,KAAD,CAAT,CAAiBE,OAAlB,CAAP,CAAkCY,GAAlC,CAAsC,CAACC,IAAD,EAAOf,KAAP,KACnC;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEe,IAFX;AAGI,MAAA,OAAO,EAAGP,CAAD,IAAO,KAAKD,OAAL,CAAaC,CAAb,CAHpB;AAII,MAAA,GAAG,EAAER,KAJT;AAKI,MAAA,SAAS,EAAC,kCALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOKe,IAPL,CADH,CADL,CARJ,CADJ;AAwBH;;AAxE0B;;AA4E/B,eAAenB,MAAf","sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport Shuffle from '../../Utils/Shuffle';\n\n\nclass QuizYT extends Component {\n\nstate={\n    questions: this.props.questions,\n    index: 0,\n    // gameStatus: \"playing\",\n    correctAnswer: this.props.questions[0].answers[0],\n    points: 0,\n    // counter: 0\n    // clicked: false\n}\n// function the is passing to the next question{by increasing the index} and adding points for the right ones\n\n    toNext = () => {\n\n        const { questions, index, points } = this.state;\n        // if(this.state.index > this.state.counter){\n        if (index < 4) {\n            this.setState({\n                index: index + 1,\n                correctAnswer: questions[index + 1].answers[0],\n                points: points + 1000,\n                // counter: this.state.counter+1\n            });\n        } else {\n            this.props.stopPlaying();\n        }\n    }\n    // checking if the button pressed is the right answer,\n    // the right answer is always the first anwer from the object array\n    // and only if it's right it goes to the next question\n\n    checkIf = (e) => {\n\n        const { correctAnswer } = this.state;\n\n        const displayedAnswer = e.target.value;\n\n        if (displayedAnswer === correctAnswer) {\n            this.toNext();\n        }\n    }\n    // IF CONDITION FOR THE GAME ENDING\n\n    render() {\n\n        const { questions, index, points } = this.state;\n\n        return (\n            <div className=\"the-yt-quiz\">\n                <div className=\"quiz-text\">\n                    <h4>{questions[index].question}</h4>\n                    <h6>\n                        Score:\n                        {points}\n                    </h6>\n                </div>\n                <div className=\"btn-4-YT\">\n                    {Shuffle(questions[index].answers).map((item, index) => (\n                        <button\n                            type=\"button\"\n                            value={item}\n                            onClick={(e) => this.checkIf(e)}\n                            key={index}\n                            className=\"myButtonYT buttonYT titleColorYT\"\n                        >\n                            {item}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default QuizYT;\n"]},"metadata":{},"sourceType":"module"}