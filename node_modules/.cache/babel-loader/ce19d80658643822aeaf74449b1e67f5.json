{"ast":null,"code":"var _jsxFileName = \"/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/InstagramRoundTwo/InstagramRoundTwo.js\";\nimport React, { Component } from 'react';\nimport Shuffle from '../../Utils/Shuffle';\nimport ButtonIgRoundTwo from './ButtonIgRoundTwo';\nimport texts from '../../../texts.json';\nimport Loading from '../../Utils/Loading/Loading';\nimport GameEnded from '../../GameEnded/GameEnded';\nimport MembersAccounts from './MembersAccounts';\nimport '../Instagram.css';\n\nclass InstagramRoundTwo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.NUMBER_OF_ATTEMPTS = 2;\n    this.OFICIAL_NUMBER_OF_ATTEMPTS = this.NUMBER_OF_ATTEMPTS - 1;\n    this.state = {\n      randomImageSrc: '',\n      randomImageLocation: '',\n      locationOptions: [],\n      data: [],\n      gameStatus: 'choosing',\n      userClicked: false\n    };\n    this.numberOfPosts = '100';\n    this.attempts = 0;\n    this.counter = 0;\n    this.apiCleanedResult = {};\n    this.apiResultLength = 0;\n\n    this.cleanApiResponse = () => {\n      const {\n        data\n      } = this.state;\n      const images = data.filter(img => img.node.location !== null);\n      const result = images.map(image => ({\n        src: image.node.thumbnail_resources[4].src,\n        location: image.node.location.name\n      }));\n      this.apiCleanedResult = result;\n      this.apiResultLength = result.length;\n    };\n\n    this.setRandomImageAndLocations = () => {\n      Shuffle(this.apiCleanedResult);\n      const firstElement = this.apiCleanedResult.shift();\n      const imagesObjArr = this.apiCleanedResult.slice(0, 3);\n      const threeLocationsArr = imagesObjArr.map(imageObj => imageObj.location);\n      threeLocationsArr.push(firstElement.location); // Cuando hacemos el push, el mismo array, con el mismo nombre,\n      // pasa de tener 3 elementos a tener 4. Si igualamos esta array a una constante, no estaríamos guardando\n      // la array de 4 elementos resultante sinó que guardaríamos el resultado del push, que sería soplo el\n      // número 4, tantos como elementos tiene dentro la array\n\n      const threeRandomPlusCorrectLocationArr = Shuffle(threeLocationsArr);\n      this.setState({\n        randomImageSrc: firstElement.src,\n        randomImageLocation: firstElement.location,\n        locationOptions: threeRandomPlusCorrectLocationArr,\n        gameStatus: 'playing',\n        userClicked: false\n      });\n      this.attempts += 1; // if (this.attempts === this.apiResultLength) {\n\n      if (this.attempts === this.NUMBER_OF_ATTEMPTS) {\n        this.setState({\n          gameStatus: 'gameOver'\n        });\n      }\n    };\n\n    this.addOneToCounter = () => {\n      this.counter += 1;\n    };\n\n    this.userHasClicked = () => {\n      this.setState({\n        userClicked: true\n      });\n    };\n\n    this.setSelectedMemberId = memberId => {\n      this.setState({\n        gameStatus: 'loading'\n      });\n      fetch(`https://www.instagram.com/graphql/query/?query_hash=e769aa130647d2354c40ea6a439bfc08&variables=\n        {\"id\":\"${memberId}\",\"first\":${this.numberOfPosts}}`).then(res => res.json()).then(data => this.setState({\n        data: data.data.user.edge_owner_to_timeline_media.edges\n      })).then(() => this.cleanApiResponse()).then(() => this.setRandomImageAndLocations());\n    };\n  }\n\n  // 'https://codeofaninja.com/tools/find-instagram-user-id'\n  // profileId='32402644';\n  // Rut's ID\n  // profileId = '10934686';\n  // LaPegatina ID\n  render() {\n    const {\n      randomImageSrc,\n      locationOptions,\n      userClicked,\n      gameStatus,\n      randomImageLocation\n    } = this.state;\n    const {\n      language\n    } = this.props;\n\n    if (gameStatus === 'loading') {\n      return React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n    }\n\n    if (gameStatus === 'choosing') {\n      return React.createElement(\"div\", {\n        className: \"choosing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(MembersAccounts, {\n        setSelectedMemberId: this.setSelectedMemberId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    }\n\n    if (gameStatus === 'playing') {\n      return React.createElement(\"div\", {\n        className: \"instagram-game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageAndLocationsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, texts[language].instagramQuestion), React.createElement(\"div\", {\n        className: \"imageDisplayedContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageDisplayed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: randomImageSrc,\n        alt: \"radom capture from the user's instagram feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"instagram-location-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, locationOptions.map((option, index) => React.createElement(\"div\", {\n        key: index,\n        className: \"instagram-option-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(ButtonIgRoundTwo, {\n        value: option,\n        currentLocation: randomImageLocation,\n        addToCounter: this.addOneToCounter,\n        key: index,\n        setRandomImageAndLocations: this.setRandomImageAndLocations,\n        userClicked: userClicked,\n        userHasClicked: this.userHasClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, texts[language].correctAnswers, ' ', this.counter, ' ', \"/\", ' ', this.OFICIAL_NUMBER_OF_ATTEMPTS)));\n    }\n\n    if (gameStatus === 'gameOver') {\n      return React.createElement(GameEnded, {\n        language: language,\n        currentGame: \"instagram\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      });\n    }\n\n    return null;\n  }\n\n}\n\nexport default InstagramRoundTwo;","map":{"version":3,"sources":["/Users/rut/Documents/WCS Bootcamp/Projects/La Pegatina/LaPegatina/src/Components/Instagram/InstagramRoundTwo/InstagramRoundTwo.js"],"names":["React","Component","Shuffle","ButtonIgRoundTwo","texts","Loading","GameEnded","MembersAccounts","InstagramRoundTwo","NUMBER_OF_ATTEMPTS","OFICIAL_NUMBER_OF_ATTEMPTS","state","randomImageSrc","randomImageLocation","locationOptions","data","gameStatus","userClicked","numberOfPosts","attempts","counter","apiCleanedResult","apiResultLength","cleanApiResponse","images","filter","img","node","location","result","map","image","src","thumbnail_resources","name","length","setRandomImageAndLocations","firstElement","shift","imagesObjArr","slice","threeLocationsArr","imageObj","push","threeRandomPlusCorrectLocationArr","setState","addOneToCounter","userHasClicked","setSelectedMemberId","memberId","fetch","then","res","json","user","edge_owner_to_timeline_media","edges","render","language","props","instagramQuestion","option","index","correctAnswers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Shuffle from '../../Utils/Shuffle';\nimport ButtonIgRoundTwo from './ButtonIgRoundTwo';\nimport texts from '../../../texts.json';\nimport Loading from '../../Utils/Loading/Loading';\nimport GameEnded from '../../GameEnded/GameEnded';\nimport MembersAccounts from './MembersAccounts';\nimport '../Instagram.css';\n\n\nclass InstagramRoundTwo extends Component {\n\n    NUMBER_OF_ATTEMPTS = 2\n\n    OFICIAL_NUMBER_OF_ATTEMPTS = this.NUMBER_OF_ATTEMPTS - 1\n\n    state = {\n        randomImageSrc: '',\n        randomImageLocation: '',\n        locationOptions: [],\n        data: [],\n        gameStatus: 'choosing',\n        userClicked: false,\n    }\n\n    numberOfPosts = '100';\n\n    attempts= 0;\n\n    counter= 0;\n\n    apiCleanedResult = {}\n\n    apiResultLength = 0\n\n\n    // Cleans the object retrieved from the api and leaves an array of objects that just\n    // have the image source for the picture and the image location\n    cleanApiResponse = () => {\n\n        const { data } = this.state;\n\n        const images = data.filter((img) => img.node.location !== null);\n\n        const result = images.map((image) => ({\n            src: image.node.thumbnail_resources[4].src,\n            location: image.node.location.name,\n        }));\n\n        this.apiCleanedResult = result;\n\n        this.apiResultLength = result.length;\n    }\n\n    // Takes off the first element of the array resulting in cleanApiResponse (called result) and takes the next 3 elements\n    setRandomImageAndLocations = () => {\n\n        Shuffle(this.apiCleanedResult);\n\n        const firstElement = this.apiCleanedResult.shift();\n\n        const imagesObjArr = this.apiCleanedResult.slice(0, 3);\n\n        const threeLocationsArr = imagesObjArr.map((imageObj) => imageObj.location);\n\n        threeLocationsArr.push(firstElement.location); // Cuando hacemos el push, el mismo array, con el mismo nombre,\n        // pasa de tener 3 elementos a tener 4. Si igualamos esta array a una constante, no estaríamos guardando\n        // la array de 4 elementos resultante sinó que guardaríamos el resultado del push, que sería soplo el\n        // número 4, tantos como elementos tiene dentro la array\n\n        const threeRandomPlusCorrectLocationArr = Shuffle(threeLocationsArr);\n\n        this.setState({\n            randomImageSrc: firstElement.src,\n            randomImageLocation: firstElement.location,\n            locationOptions: threeRandomPlusCorrectLocationArr,\n            gameStatus: 'playing',\n            userClicked: false,\n        });\n\n        this.attempts += 1;\n\n        // if (this.attempts === this.apiResultLength) {\n        if(this.attempts === this.NUMBER_OF_ATTEMPTS) {\n            this.setState({\n                gameStatus: 'gameOver',\n            });\n        }\n    }\n\n    addOneToCounter = () => {\n        this.counter += 1;\n    }\n\n    userHasClicked = () => {\n        this.setState({\n            userClicked: true,\n        });\n    }\n\n    setSelectedMemberId = (memberId) => {\n\n        this.setState({\n            gameStatus: 'loading',\n        });\n\n        fetch(`https://www.instagram.com/graphql/query/?query_hash=e769aa130647d2354c40ea6a439bfc08&variables=\n        {\"id\":\"${memberId}\",\"first\":${this.numberOfPosts}}`)\n            .then((res) => res.json())\n            .then((data) => this.setState({ data: data.data.user.edge_owner_to_timeline_media.edges }))\n            .then(() => this.cleanApiResponse())\n            .then(() => this.setRandomImageAndLocations());\n    }\n\n\n    // 'https://codeofaninja.com/tools/find-instagram-user-id'\n\n    // profileId='32402644';\n    // Rut's ID\n\n    // profileId = '10934686';\n    // LaPegatina ID\n\n    render() {\n\n        const { randomImageSrc, locationOptions, userClicked, gameStatus, randomImageLocation } = this.state;\n\n        const { language } = this.props;\n\n        if (gameStatus === 'loading') {\n            return (\n                <div className=\"loading\">\n                    <Loading />\n                </div>\n            );\n        }\n\n        if (gameStatus === 'choosing') {\n            return (\n                <div className=\"choosing\">\n                    <MembersAccounts\n                        setSelectedMemberId={this.setSelectedMemberId}\n                    />\n                </div>\n            );\n        }\n\n        if (gameStatus === 'playing') {\n            return (\n                <div className=\"instagram-game\">\n                    <div className=\"imageAndLocationsContainer\">\n                        <h1>{texts[language].instagramQuestion}</h1>\n                        <div className=\"imageDisplayedContainer\">\n                            <div className=\"imageDisplayed\">\n                                <img src={randomImageSrc} alt=\"radom capture from the user's instagram feed\" />\n                            </div>\n                        </div>\n                        <div className=\"instagram-location-buttons\">\n                            {locationOptions.map((option, index) => (\n                                <div key={index} className=\"instagram-option-button\">\n                                    <ButtonIgRoundTwo\n                                        value={option}\n                                        currentLocation={randomImageLocation}\n                                        addToCounter={this.addOneToCounter}\n                                        key={index}\n                                        setRandomImageAndLocations={this.setRandomImageAndLocations}\n                                        userClicked={userClicked}\n                                        userHasClicked={this.userHasClicked}\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                        <p>\n                            {texts[language].correctAnswers}\n                            {' '}\n                            {this.counter}\n                            {' '}\n                            /\n                            {' '}\n                            {this.OFICIAL_NUMBER_OF_ATTEMPTS}\n                        </p>\n                    </div>\n                </div>\n            );\n        }\n\n        if (gameStatus === 'gameOver') {\n            return (\n                <GameEnded language={language} currentGame=\"instagram\" />\n            );\n        }\n\n        return null;\n    }\n\n}\n\nexport default InstagramRoundTwo;\n"]},"metadata":{},"sourceType":"module"}